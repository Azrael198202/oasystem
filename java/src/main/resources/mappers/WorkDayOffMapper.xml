<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.WorkDayOffMapper">
  <resultMap id="BaseResultMap" type="com.demo.entity.WorkDayOff">
    <constructor>
      <idArg column="company_code" javaType="java.lang.String" jdbcType="CHAR" />
      <idArg column="request_number" javaType="java.lang.String" jdbcType="VARCHAR" />
      <idArg column="request_user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="work_type_kbn" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="scheduled_work_day" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="work_time_kbn" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="work_reason_kbn" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="registration_user" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="registration_datetime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_user" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="update_datetime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    company_code, request_number, request_user_id, work_type_kbn, scheduled_work_day, 
    work_time_kbn, work_reason_kbn, remark, registration_user, registration_datetime, 
    update_user, update_datetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_work_dayoff
    where company_code = #{companyCode,jdbcType=CHAR}
      and request_number = #{requestNumber,jdbcType=VARCHAR}
      and request_user_id = #{requestUserId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from t_work_dayoff
    where company_code = #{companyCode,jdbcType=CHAR}
      and request_number = #{requestNumber,jdbcType=VARCHAR}
      and request_user_id = #{requestUserId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.demo.entity.WorkDayOff">
    insert into t_work_dayoff (company_code, request_number, request_user_id, 
      work_type_kbn, scheduled_work_day, work_time_kbn, 
      work_reason_kbn, remark, registration_user, 
      registration_datetime, update_user, update_datetime
      )
    values (#{companyCode,jdbcType=CHAR}, #{requestNumber,jdbcType=VARCHAR}, #{requestUserId,jdbcType=VARCHAR}, 
      #{workTypeKbn,jdbcType=CHAR}, #{scheduledWorkDay,jdbcType=CHAR}, #{workTimeKbn,jdbcType=CHAR}, 
      #{workReasonKbn,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}, #{registrationUser,jdbcType=VARCHAR}, 
      #{registrationDatetime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateDatetime,jdbcType=TIMESTAMP}
      )
      ON DUPLICATE KEY UPDATE
         work_type_kbn = VALUES(work_type_kbn),
         scheduled_work_day = VALUES(scheduled_work_day),
         work_time_kbn = VALUES(work_time_kbn),
         work_reason_kbn = VALUES(work_reason_kbn),
         remark = VALUES(remark),
         registration_user = VALUES(registration_user),
         registration_datetime = VALUES(registration_datetime),
         update_user = VALUES(update_user),
         update_datetime = VALUES(update_datetime);
  </insert>
  <insert id="insertSelective" parameterType="com.demo.entity.WorkDayOff">
    insert into t_work_dayoff
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyCode != null">
        company_code,
      </if>
      <if test="requestNumber != null">
        request_number,
      </if>
      <if test="requestUserId != null">
        request_user_id,
      </if>
      <if test="workTypeKbn != null">
        work_type_kbn,
      </if>
      <if test="scheduledWorkDay != null">
        scheduled_work_day,
      </if>
      <if test="workTimeKbn != null">
        work_time_kbn,
      </if>
      <if test="workReasonKbn != null">
        work_reason_kbn,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="registrationUser != null">
        registration_user,
      </if>
      <if test="registrationDatetime != null">
        registration_datetime,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateDatetime != null">
        update_datetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyCode != null">
        #{companyCode,jdbcType=CHAR},
      </if>
      <if test="requestNumber != null">
        #{requestNumber,jdbcType=VARCHAR},
      </if>
      <if test="requestUserId != null">
        #{requestUserId,jdbcType=VARCHAR},
      </if>
      <if test="workTypeKbn != null">
        #{workTypeKbn,jdbcType=CHAR},
      </if>
      <if test="scheduledWorkDay != null">
        #{scheduledWorkDay,jdbcType=CHAR},
      </if>
      <if test="workTimeKbn != null">
        #{workTimeKbn,jdbcType=CHAR},
      </if>
      <if test="workReasonKbn != null">
        #{workReasonKbn,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="registrationUser != null">
        #{registrationUser,jdbcType=VARCHAR},
      </if>
      <if test="registrationDatetime != null">
        #{registrationDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDatetime != null">
        #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.entity.WorkDayOff">
    update t_work_dayoff
    <set>
      <if test="workTypeKbn != null">
        work_type_kbn = #{workTypeKbn,jdbcType=CHAR},
      </if>
      <if test="scheduledWorkDay != null">
        scheduled_work_day = #{scheduledWorkDay,jdbcType=CHAR},
      </if>
      <if test="workTimeKbn != null">
        work_time_kbn = #{workTimeKbn,jdbcType=CHAR},
      </if>
      <if test="workReasonKbn != null">
        work_reason_kbn = #{workReasonKbn,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="registrationUser != null">
        registration_user = #{registrationUser,jdbcType=VARCHAR},
      </if>
      <if test="registrationDatetime != null">
        registration_datetime = #{registrationDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDatetime != null">
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_code = #{companyCode,jdbcType=CHAR}
      and request_number = #{requestNumber,jdbcType=VARCHAR}
      and request_user_id = #{requestUserId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.entity.WorkDayOff">
    update t_work_dayoff
    set work_type_kbn = #{workTypeKbn,jdbcType=CHAR},
      scheduled_work_day = #{scheduledWorkDay,jdbcType=CHAR},
      work_time_kbn = #{workTimeKbn,jdbcType=CHAR},
      work_reason_kbn = #{workReasonKbn,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR},
      registration_user = #{registrationUser,jdbcType=VARCHAR},
      registration_datetime = #{registrationDatetime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP}
    where company_code = #{companyCode,jdbcType=CHAR}
      and request_number = #{requestNumber,jdbcType=VARCHAR}
      and request_user_id = #{requestUserId,jdbcType=VARCHAR}
  </update>
  <select id="selectWorkDayOff" parameterType="map" resultType="com.demo.pojo.workDayOff.WorkDayOffDTO">
    select * from t_work_dayoff
    where company_code = #{companyCode,jdbcType=CHAR}
      and request_number = #{requestNumber,jdbcType=VARCHAR}
  </select>
  <!--  代休残入力画面：休日出勤テーブルの申請番号取得-->
  <select id="requestNumberSubHoliday" parameterType="map" resultType="com.demo.pojo.workDayOff.WorkDayOffResultDTO">
    SELECT    main.request_number
            , main.work_type_kbn
            , main.work_time_kbn
    FROM      t_work_dayoff main
    WHERE  EXISTS (
                    SELECT  request_number
                    FROM    t_wf sub
                    WHERE   main.company_code   = sub.company_code
                    AND     main.request_number = sub.request_number
                    AND     sub.wf_status_kbn   IN ('025','900')
                )
    AND       main.company_code       = #{companyCode,jdbcType=CHAR}
    AND       main.request_user_id    = #{requestUserId,jdbcType=CHAR}
    AND       main.scheduled_work_day = #{scheduledWorkDay,jdbcType=CHAR}
    ORDER BY  main.request_number
    DESC      LIMIT 1
  </select>
  <!--  休日出勤データ取得-->
  <select id="getWorkDayOffInfo" parameterType="map" resultType="com.demo.pojo.workDayOff.GetWorkDayOffInfoDTO">
    select
          r.company_code
         ,r.request_number
         ,r.request_type_kbn
         ,w.scheduled_work_day
         ,w.work_time_kbn
         ,r.request_user_id
         ,r.request_status_kbn
    from  t_request as r
            left join  t_work_dayoff as w
                       on  r.request_number = w.request_number
    where  r.company_code = #{companyCode,jdbcType=CHAR}
      and  r.request_user_id = #{requestUserId,jdbcType=VARCHAR}
      and  w.scheduled_work_day = #{scheduledWorkDay,jdbcType=CHAR}
  </select>
</mapper>